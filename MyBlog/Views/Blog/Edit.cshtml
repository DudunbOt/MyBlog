@model mdlMyBlog.Blog

@{
    ViewBag.Title = "Edit";
    ViewBag.ContentTitle = "Edit Post";
    ViewBag.ContentSubtitle = "Modify Your Post";
}

<script src="~/Assets/ckeditor/ckeditor.js"></script>

<h2>Edit</h2>


<div class="col-md-10 col-lg-8 col-xl-7">
    <div class="my-5">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.id)

            @Html.ValidationSummary(true, "", new { @class = "invalid-feedback" })
            <div class="form-floating">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "invalid-feedback" })

            </div>

            <div class="form-floating">
                @Html.EditorFor(model => model.TitleDesc, new { htmlAttributes = new { @class = "form-control" } })
                @Html.LabelFor(model => model.TitleDesc, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.ValidationMessageFor(model => model.TitleDesc, "", new { @class = "invalid-feedback" })
            </div>

            <div class="form-floating">
                @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" }) <br /> <br />
                @Html.TextAreaFor(model => model.Content, htmlAttributes: new { @id = "CKEditor", @class = "form-control", @style = "height: 12rem", @placeholder = "Content" })
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "invalid-feedback" })
                <script>CKEDITOR.replace("CKEditor")</script>
            </div>

            <div class="form-floating">
                @Html.HiddenFor(model => model.CreatedAt)

            </div>

            <div class="form-floating">
                @Html.HiddenFor(model => model.UpdatedAt)
            </div>

            <div class="form-floating">
                @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control" } })
                @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.ValidationMessageFor(model => model.Author, "", new { @class = "invalid-feedback" })

            </div>
            <br />
            <div class="form-floating">
                <input type="submit" value="Save" class="btn btn-success text-uppercase" />
                @Html.ActionLink("Cancel", "Details", new { id = Model.id }, htmlAttributes: new { @class = "btn btn-primary text-uppercase" })
            </div>
        </div>
        }
    </div>
</div>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
